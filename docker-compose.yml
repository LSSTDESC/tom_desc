services:
  tom:
    image: registry.nersc.gov/m1727/raknop/tom_desc_bindmount
    build:
      context: ./
      dockerfile: docker_server/Dockerfile
      target: tom-server-bindmount
    ports:
      - "8080:8080"
    depends_on:
      migratedb:
        condition: service_completed_successfully
    volumes:
      - type: bind
        source: ./tom_desc
        target: /tom_desc
      - type: bind
        source: ./secrets
        target: /secrets
    environment:
      - DB_USER=postgres
      - DB_PASS=fragile
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=tom_desc
#       - CASSANDRA_HOST=cassandra
#       - CASSANDRA_USER=cassandra
#       - CASSANDRA_PASSWORD=cassandra
    user: ${USERID:-0}:${GROUPID:-0}

  shell:
    image: registry.nersc.gov/m1727/raknop/tom_desc_bindmount_dev
    build:
      context: ./
      dockerfile: docker_server/Dockerfile
      target: tom-server-bindmount-dev
    depends_on:
      migratedb:
        condition: service_completed_successfully
    volumes:
      - type: bind
        source: ./tom_desc
        target: /tom_desc
      - type: bind
        source: ./secrets
        target: /secrets
    environment:
      - DB_USER=postgres
      - DB_PASS=fragile
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=tom_desc
#       - CASSANDRA_HOST=cassandra
#       - CASSANDRA_USER=cassandra
#       - CASSANDRA_PASSWORD=cassandra
    user: ${USERID:-0}:${GROUPID:-0}
    entrypoint: [ "tail", "-f", "/etc/issue" ]

  migratedb:
    image: registry.nersc.gov/m1727/raknop/tom_desc_bindmount
    build:
      context: ./
      dockerfile: docker_server/Dockerfile
      target: tom-server-bindmount
    depends_on:
      postgres:
        condition: service_healthy
#       cassandra:
#         condition: service_healthy
    volumes:
      - type: bind
        source: ./tom_desc
        target: /tom_desc
      - type: bind
        source: ./secrets
        target: /secrets
    environment:
      - DB_USER=postgres
      - DB_PASS=fragile
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=tom_desc
#       - CASSANDRA_HOST=cassandra
#       - CASSANDRA_USER=cassandra
#       - CASSANDRA_PASSWORD=cassandra
    entrypoint:
      - /bin/bash
      - -c
      - |
        python manage.py migrate
#         python manage.py sync_cassandra

  postgres:
    image: registry.nersc.gov/m1727/raknop/tom-postgres
    build:
      context: ./docker_postgres
      dockerfile: Dockerfile
      target: tom-postgres
    volumes:
      - tomdbdata:/var/lib/postgresql/data
    healthcheck:
      test: netcat -w 1 localhost 5432 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5

  # cassandra:
  #   image: registry.nersc.gov/m1727/raknop/tom_cassandra
  #   build:
  #     context: ./docker_cassandra
  #     dockerfile: Dockerfile
  #   volumes:
  #     - tomcassandradata:/var/lib/cassandra
  #   healthcheck:
  #     test: cqlsh -u cassandra -p cassandra cassandra < /dev/null
  #     interval: 10s
  #     timeout: 2s
  #     retries: 10

  kafka-zookeeper:
    image: registry.nersc.gov/m1727/raknop/kafka
    build:
      context: docker_kafka
    healthcheck:
      test: netcat -w 1 localhost 2181 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
    entrypoint: [ "bin/zookeeper-server-start.sh", "config/zookeeper.properties" ]

  kafka-server:
    depends_on:
       kafka-zookeeper:
         condition: service_healthy
    image: registry.nersc.gov/m1727/raknop/kafka
    build:
      context: docker_kafka
    healthcheck:
      test: netcat -w 1 localhost 9092 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
    entrypoint: [ "bin/kafka-server-start.sh", "config/server.properties" ]

  fakebroker:
    depends_on:
      kafka-server:
        condition: service_healthy
    image: registry.nersc.gov/m1727/raknop/fakebroker
    build:
      context: tests
      dockerfile: Dockerfile.fakebroker
    entrypoint:
      - python
      - /fake/fakebroker.py
      - --source
      - kafka-server:9092
      - -t
      - tmp-alerts-wfd
      - tmp-alerts-ddf-full
      - --dest
      - kafka-server:9092
      - -u
      - classifications
      - -b
      - /fake/schema/elasticc.v0_9_1.brokerClassification.avsc
      - -s
      - /fake/schema/elasticc.v0_9_1.alert.avsc


volumes:
  tomdbdata:
#  tomcassandradata:
